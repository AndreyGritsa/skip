module SKFSTest;

fun testLazyUnit(): mutable SKFS.Context {
  SKFS.run(context ~> {
    dirInput = context.mkdir(
      SKFS.IntFile::fromFile,
      "/input/",
      Array[(SKFS.IID(0), SKFS.IntFile(23))],
    );
    dir = SKFS.Handle::lazy(
      SKFS.IntFile::fromFile,
      context,
      "/lazy/",
      (context, _self, x) ~>
        SKFS.IntFile(
          x match {
          | SKFS.IID(v) -> dirInput.getArray(context, SKFS.IID(0))[0].value + v
          | _ -> error()
          },
        )
      ,
    );
    arr1 = dir.getArray(context, SKFS.IID(23));
    arr2 = context.getDir(dir.dirName).getArrayRaw(SKFS.IID(23)).map(x ->
      SKFS.IntFile::fromFile(x)
    );
    expectEq("Lazy unit", arr1, () -> arr2);
    /*        context
              .getDir(dirInput.dirName)
              .writeArray(context, "0", Array[SKFS.IntFile(12)]);
            context.update();
        */
  });
}
